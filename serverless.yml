
service: dynamodb-crud-api

provider:
  name: aws
  runtime: nodejs12.x
  region: eu-west-1
  stage: dev
  environment:
    DYNAMODB_TABLE_NAME: ${self:custom.postTableName}

custom:
  postTableName: post-table-${self:provider.stage}

plugins:
  - serverless-iam-roles-per-function

functions:
  getPost:
    handler: src/api.getPost
    name: get-post
    memorySize: 128
    timeout: 5
    events:
    - http:
        path:  post/{postId}
        method: GET
    iamRoleStatements:
      - Effect: "Allow"
        Action:
          - "dynamodb:GetItem"
        Resource: !GetAtt PostsTable.Arn

  createPosts:
    handler: src/api.createPost
    name: create-post
    memorySize: 128
    timeout: 5
    events:
    - http:
        path: post
        method: POST
    iamRoleStatements:
      - Effect: "Allow"
        Action:
          - "dynamodb:PutItem"
        Resource: !GetAtt PostsTable.Arn

  updatePosts:
    handler: src/api.updatePost
    name: update-posts
    memorySize: 128
    timeout: 5
    events:
    - http:
        path: post/{postId}
        method: PUT
    iamRoleStatements:
      - Effect: "Allow"
        Action:
          - "dynamodb:UpdateItem"
        Resource: !GetAtt PostsTable.Arn

  deletePosts:
    handler: src/api.deletePost
    name: delete-post
    memorySize: 128
    timeout: 5
    events:
    - http:
        path: post/{postId}
        method: DELETE
    iamRoleStatements:
      - Effect: "Allow"
        Action:
          - "dynamodb:DeleteItem"
        Resource: !GetAtt PostsTable.Arn

  getAllPosts:
    handler: src/api.getAllPosts
    name: get-all-posts
    memorySize: 128
    timeout: 5
    events:
    - http:
        path: post
        method: GET
    iamRoleStatements:
      - Effect: "Allow"
        Action:
          - "dynamodb:Scan"
        Resource: !GetAtt PostsTable.Arn
  
resources:
  Resources:
    PostsTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:custom.postTableName}
        AttributeDefinitions:
        - AttributeName: postId
          AttributeType: S
        KeySchema:
        - AttributeName: postId
          KeyType: HASH
        ProvisionedThroughput: 
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        